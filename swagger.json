{
  "swagger": "2.0",
  "basePath": "/",
  "paths": {
    "/authentication/": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "user login",
        "tags": ["auth"]
      }
    },
    "/authentication/login": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "user login",
        "tags": ["auth"]
      }
    },
    "/authentication/logout": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "user logout",
        "tags": ["auth"]
      }
    },
    "/authentication/refresh": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "Refresh token",
        "tags": ["auth"]
      }
    },
    "/detection/": {
      "post": {
        "responses": {
          "404": {
            "description": "User not found."
          }
        },
        "operationId": "detects a target. needs base64 url as input",
        "tags": ["detection"]
      }
    },
    "/detection/hits": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "detects a target. return coordinates of the target and shots",
        "tags": ["detection"]
      }
    },
    "/discipline/": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/discipline"
                  }
                }
              }
            }
          }
        },
        "summary": "List all disciplines",
        "operationId": "list_of_disciplines",
        "tags": ["discipline"]
      }
    },
    "/training/": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "List all training",
        "operationId": "list of all training",
        "tags": ["training"]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "Post new training",
        "tags": ["training"]
      }
    },
    "/user/{public_id}": {
      "parameters": [
        {
          "in": "path",
          "description": "The User identifier",
          "name": "public_id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "404": {
            "description": "User not found."
          }
        },
        "summary": "get a user given its identifier",
        "operationId": "get a user",
        "tags": ["user"]
      }
    }
  },
  "info": {
    "title": "FLASK RESTPLUS(RESTX) API BOILER-PLATE WITH JWT",
    "version": "1.0",
    "description": "a boilerplate for flask restplus (restx) web service"
  },
  "produces": ["application/json"],
  "consumes": ["application/json"],
  "securityDefinitions": {
    "apikey": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "apikey": []
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "user related operations"
    },
    {
      "name": "detection",
      "description": "detection related operations"
    },
    {
      "name": "discipline",
      "description": "discipline related operations"
    },
    {
      "name": "training",
      "description": "training related operations"
    },
    {
      "name": "auth",
      "description": "authentication related operations"
    }
  ],
  "definitions": {
    "user": {
      "required": ["email", "password", "username"],
      "properties": {
        "email": {
          "type": "string",
          "description": "user email address"
        },
        "username": {
          "type": "string",
          "description": "user username"
        },
        "password": {
          "type": "string",
          "description": "user password"
        },
        "public_id": {
          "type": "string",
          "description": "user Identifier"
        }
      },
      "type": "object"
    },
    "discipline": {
      "required": ["title"],
      "properties": {
        "title": {
          "type": "string",
          "description": "title"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  }
}
